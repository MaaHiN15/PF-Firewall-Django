pfctl

Enabling/disabling pfctl
    pfctl -e    // Enabling
    pfctl -d    // disabling


Tables

    pfctl -t <name> -T <option> <ip-addr>

    create/modify Table
        pfctl -t <name> -T add <ip-addr>

    Remove ip-addr from Table
        pfctl -t <name> -T remove <ip-addr>

    Show contents of the Table
        pfctl -t <name> -T show     // shows list of ip-addr only
        pfctl -t <name> -T show -v  // shows more information about table contains list of ip-addr

    Delete table
        pfctl -t <name> -T flush
    
    display all Tables
        pfctl -vvsTables
    
    pf.conf lines
        // create table
        table <name> const <ip-addr>    // const - can't edit after declaration
        table <name> persist <ip-addr>  // persist  - keeping the rule in memory when no rules referencing that table


packet filtering

    action [direction] [log] [quick] [on interface] [af] [proto protocol]
       [from src_addr [port src_port]] [to dst_addr [port dst_port]]
       [flags tcp_flags] [state]
    

    # Allow all outbound traffic
    pass out all keep state

    # Allow related inbound traffic for established connections
    pass in on en0 proto { tcp, udp, icmp } from any to any keep state

    # Allow SSH (replace 22 with your actual SSH port)
    pass in on $ext_if proto tcp from any to any port 22

    # Block all other inbound traffic
    block in on $ext_if

    # Allow traffic from a specific IP address range
    pass in on $ext_if from 192.168.1.0/24 to any

    # Allow HTTP and HTTPS traffic
    pass in on $ext_if proto tcp from any to any port { 80, 443 }

    # Block outbound traffic to a specific IP address
    block out on $ext_if to 203.0.113.1

    # Allow traffic on a specific interface (replace em0 with your interface)
    pass in on em0

    # Block traffic with packet size exceeding 1500 bytes
    block all max-packet 1500

    # Allow traffic from a specific MAC address
    pass in on $ext_if ether src 00:11:22:33:44:55

    # Allow traffic to a specific port range
    pass in on $ext_if proto tcp from any to any port { 1000:2000 }

    # Block traffic from 9:00 PM to 6:00 AM
    block in on $ext_if time { 21:00-23:59, 00:00-06:00 }

    # Allow traffic for a specific user (replace "username" with the actual username)
    pass in on $ext_if user "username"

    # Block incoming TCP packets with the SYN and FIN flags set
    block in on $ext_if proto tcp flags SF/SF

    # Allow incoming TCP packets with only the SYN flag set
    pass in on $ext_if proto tcp flags S/SA keep state

    # Block outgoing traffic to specific countries (replace with desired countries)
    block out quick on $ext_if to { CN, RU, KP }


NAT (Network Address Translation)

    Need to make sure IP forwarding is enabled
    for (IPv4)
        sysctl net.inet.ip.forwarding=1
        echo 'net.inet.ip.forwarding=1' >> /etc/sysctl.conf
    for (IPv6)
        sysctl net.inet6.ip6.forwarding=1
        echo 'net.inet6.ip6.forwarding=1' >> /etc/sysctl.conf

    nat on <interface> proto <proto> from <src-addr> port <src-port> to <dest-addr> port <dest-port> -> <cird-range>

    nat on <interface> proto <proto> from <src-addr> to <dest-addr> -> <ip-addr>

    nat on <interface> proto <proto> from <src-addr> to <dest-addr> -> <interface>

    no nat on <interface> proto <proto> from <src-addr> to <dest-addr>

    no nat on <interface> proto <proto> from <src-addr> port <src-port> to <dest-addr> port <dest-port> 








demo-knr-s3-bucket-2021.s3.us-west-1.amazonaws.com